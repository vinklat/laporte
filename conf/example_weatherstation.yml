--- # example:
#
# - some sensor sends temperature and relative humidity data to this gateway
# - temperature will be corrected (slope +1% and shift + 0.5) maybe because the sensor might not be accurate :)
# - other two metrics will be calculated (dew point temperature and absolute humidity)
# - for an inactive sensor, the data expires in 10 minutes
#
# you can send metrics by curl (via rest api):
#
#   curl http://localhost:9128/api/metrics/weather1 -d "temp_celsius=37.5" -d "hum_ratio=0.8" -X PUT
#
# watch metrics via live status page
#   http://localhost:9128


virtual:
    weather1:
        sensors:
            temp_celsius:
                type: gauge

                # if ttl is set:
                #   - all metrics will expire if they are not updated within ttl
                #   - there will be a gap in the charts when it comes down
                # if ttl is not set:
                #   - the last value will cover an indeterminate state if the sensor goes out
                ttl: 600

                # if dataset is set: 
                #   - wait until temp_celsius and hum_ratio are both set, 
                #     then continue eval dew_celsius, hum_grams
                # if dataset would not be set:
                #   - eval would be done twice
                dataset: true

                # metric will be corrected (slope +1% and shift + 0.5)
                eval_expr: 'value * 1.01 + 0.5'

            hum_ratio:
                type: gauge
                ttl: 600
                dataset: true

                # percents should be stored as 0.0-1.0 (ratio)
                # uncomment next line if sensor sends 1-100%
                # eval_expr: 'value / 100'

            dew_celsius:
                type: gauge
                ttl: 600

                # metric will be calculated
                eval_require:
                    temp_celsius: [ temp_celsius, value ]
                    hum_ratio: [ hum_ratio, value ]
                eval_expr: |
                    l = log(hum_ratio);
                    m = 17.27 * temp_celsius;
                    n = temp_celsius + 237.3;
                    b = (l + (m / n)) / 17.27;
                    (237.3 * b) / (1 - b)

            hum_grams:
                type: gauge
                ttl: 600

                # metric will be calculated
                eval_require:
                    dew_celsius: [ dew_celsius, value ]
                eval_expr: |
                    t =  8.1332 - (1762.39 / (dew_celsius + 235.66));
                    ((10**t) / 760.0) * 1000 * 18.0 / 22.4
