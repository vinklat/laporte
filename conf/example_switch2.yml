# example:
# - two switches with 20s delay
# - the light works during the activity of at least one switch
#
# you can control the switch by curl (rest api):
#   curl http://localhost:9128/api/sensor/switch1 -d "switch_state=on" -X PUT    
#   curl http://localhost:9128/api/sensor/switch1 -d "switch_state=off" -X PUT    
#
# watch status via live page
#   http://localhost:9128


virtual:
    switch1:
        sensors:
            switch_state:
                type: switch

                # after ttl expires, returns the switch to its default state
                ttl: 20

                # if accept_refresh is set to true:
                #  - if the switch will be set again in "on" state, ttl countdown starts again
                # if accept_refresh is not set:
                #  - during a delay the next hit is ignored
                accept_refresh: true
    switch2:
        sensors:
            switch_state:
                type: switch
                ttl: 20
                accept_refresh: true
    light:
        actuators:
            relay_state:
                type: switch

                # this sensor monitors state of other sensors
                eval_require:
                    sw1: [ switch1, switch_state, value ]
                    sw2: [ switch2, switch_state, value ]

                # value will be calculated
                eval_expr: "sw1 or sw2"
